<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>React Native Starter Guide</title>

    <!-- CSS Section -->
    <!-- Adding basic styling to demonstrate CSS essentials -->
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
        margin: 0;
        padding: 0;
      }

      header {
        background-color: #6200ea;
        color: white;
        padding: 1em;
        text-align: center;
      }

      .container {
        padding: 2em;
      }

      .button {
        background-color: #03dac6;
        color: white;
        padding: 1em;
        border: none;
        cursor: pointer;
        margin-top: 1em;
      }

      .button:hover {
        background-color: #018786;
      }
    </style>
  </head>
  <body>
    <!-- HTML Structure Section -->
    <!-- This section demonstrates creating an accessible structure for an app -->
    <header>
      <h1>Welcome to React Native Starter Guide</h1>
    </header>

    <div class="container">
      <h2>Introduction</h2>
      <p>
        This example demonstrates basic HTML, CSS, and JavaScript, and serves as
        a foundation for learning React and React Native.
      </p>

      <!-- JavaScript Section -->
      <!-- Demonstrating dynamic interaction using JavaScript -->
      <button class="button" id="clickMeButton">Click Me</button>
      <p
        id="clickMessage"
        style="display: none; color: #6200ea; margin-top: 1em"
      >
        You clicked the button!
      </p>

      <!-- React-like Example -->
      <h2>React Basics</h2>
      <p>Below is a simple React-like example using plain JavaScript.</p>
      <div id="reactContainer"></div>
    </div>

    <!-- JavaScript Section -->
    <script>
      // Vanilla JavaScript to handle button interaction
      const clickMeButton = document.getElementById("clickMeButton");
      const clickMessage = document.getElementById("clickMessage");

      clickMeButton.addEventListener("click", () => {
        clickMessage.style.display = "block";
      });

      // Simulating a React-like Component Rendering
      function ReactComponent() {
        return `<div style="padding: 1em; border: 1px solid #6200ea; margin-top: 1em;">
                        <h3>This is a React-like Component</h3>
                        <p>In React, this would be rendered with JSX.</p>
                    </div>`;
      }

      // Rendering the React-like Component
      const reactContainer = document.getElementById("reactContainer");
      reactContainer.innerHTML = ReactComponent();

      // React Native Section Explanation
      console.log(
        "In React Native, you would use similar concepts with components like View, Text, and Button."
      );
    </script>
  </body>
</html>